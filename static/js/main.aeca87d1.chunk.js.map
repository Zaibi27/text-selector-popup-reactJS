{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","theButton","dialogBox","uid","selectedText","addedText","myArray","className","onMouseDown","e","document","querySelector","getComputedStyle","display","target","nodeName","style","getElementById","value","window","getSelection","empty","onMouseUp","querySelectorAll","setTimeout","toString","trim","length","x","clientX","y","clientY","left","top","onClick","text","Date","Card","id","name","cols","rows","placeholder","obj","push","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"mRA4IeA,MAtIf,WACE,IAAgBC,EAAYC,EAExBC,EAAMC,EAAeC,EADnBC,EAAS,GAqFf,OACE,sBAAKC,UAAU,MAAMC,YAtDA,SAACC,GAExBR,EAAYS,SAASC,cAAc,oBACnCT,EAAYQ,SAASC,cAAc,eACQ,UAAxCC,iBAAiBX,GAAWY,SAA4C,QAArBJ,EAAEK,OAAOC,UACtC,WAAtBN,EAAEK,OAAOC,UACa,aAAtBN,EAAEK,OAAOC,UAAgD,SAArBN,EAAEK,OAAOC,WAChDd,EAAUe,MAAMH,QAAU,OAC1BX,EAAUc,MAAMH,QAAU,OAC1BH,SAASO,eAAe,cAAcC,MAAQ,GAC9CC,OAAOC,eAAeC,UA4CpB,UACE,2FAGD,qBAAKd,UAAU,mBAAf,SACC,mBAAGA,UAAU,4CAA4Ce,UAvFxC,SAACb,GACNC,SAASa,iBAAiB,mBACxCtB,EAAYS,SAASC,cAAc,oBAKtCa,YAAW,WAKN,GAHWL,OAAOC,eAAeK,WAAWC,OAGpCC,OAAS,EAAE,CACjB1B,EAAUe,MAAMH,QAAU,QAE5B,IAAMe,EAAInB,EAAEoB,QACNC,EAAIrB,EAAEsB,QAGV9B,EAAUe,MAAMgB,KAAhB,UAA0BJ,EAAE,GAA5B,MACA3B,EAAUe,MAAMiB,IAAhB,UAAyBH,EAAE,GAA3B,SAKJ,IA8DE,0iEA0BI,cAAC,IAAD,CAAgBI,QAvEJ,SAACzB,GACnB,IAAM0B,EAAOhB,OAAOC,eAAeK,WAAWC,QAC9CxB,EAAYQ,SAASC,cAAc,gBACzBK,MAAMH,QAAU,OAC1B,IAAMe,EAAInB,EAAEoB,QACNC,EAAIrB,EAAEsB,QACZ7B,EAAUc,MAAMgB,KAAhB,UAA0BJ,EAAI,GAA9B,MACA1B,EAAUc,MAAMiB,IAAhB,UAAyBH,EAAE,GAA3B,MAEA3B,EAAM,IAAIiC,KACVhC,EAAe+B,KA+Db,eAACE,EAAA,EAAD,CAAM9B,UAAU,aAAa+B,GAAG,aAAhC,UACA,0BAAUC,KAAK,GAAGD,GAAG,aAAaE,KAAK,KAAKC,KAAK,IAAIC,YAAY,oBACjE,sBAAKnC,UAAU,kBAAf,UACA,wBAAQA,UAAU,eAAe2B,QA9DhB,WACnBjC,EAAUe,MAAMH,QAAU,OAC1BX,EAAUc,MAAMH,QAAU,OAC1BH,SAASO,eAAe,cAAcC,MAAQ,GAC9CC,OAAOC,eAAeC,SA0DpB,oBACA,wBAAQd,UAAU,YAAY2B,QAvDP,WACzB7B,EAAYK,SAASO,eAAe,cAAcC,MAElD,IAAIyB,EAAM,CACRxC,IAAKA,EACLC,aAAcA,EACdC,UAAWA,GAEbC,EAAQsC,KAAKD,GACb1C,EAAUe,MAAMH,QAAU,OAC1BX,EAAUc,MAAMH,QAAU,OAC1BH,SAASO,eAAe,cAAcC,MAAQ,GAC9CC,OAAOC,eAAeC,QACtBwB,QAAQC,IAAIxC,IA0CV,gCCvHSyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhD,SAASO,eAAe,SAM1B8B,M","file":"static/js/main.aeca87d1.chunk.js","sourcesContent":["\nimport './App.css';\nimport \"./styles/styling.css\" ;\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Card from '@material-ui/core/Card';\n// import Button from \"@material-ui/core/Button\" ;\nfunction App() {\n  let selectArea, theButton , dialogBox , textArea  ;\n  const myArray =[];\n  let uid , selectedText , addedText ; \n\n\nconst loggerFunction = (e) => {\n    selectArea =  document.querySelectorAll(\".select-content\");\n    theButton = document.querySelector(\".MuiSvgIcon-root\"); \n \n \n\n\n setTimeout(() => {  //settimeout set to zero so the selected text is deselected if the user again clicks on it\n\n    const text = window.getSelection().toString().trim(); //get the selected text using the getSelection method\n  // console.log(text) ;\n    \n      if(text.length > 0){\n        theButton.style.display = \"block\" ;\n      \n      const x = e.clientX ; //x coordinates of the pointer where the mouseup event was triggered\n      const y = e.clientY ; // y coordinates of the pointer where the mouseup event was triggered\n        \n  \n        theButton.style.left = `${x-20}px` ;\n        theButton.style.top = `${y+15}px` ;\n        \n       \n  \n    }\n  },0)\n}\n\nconst deselectFunction = (e) =>{\n  \n  theButton = document.querySelector(\".MuiSvgIcon-root\");\n  dialogBox = document.querySelector(\".dialog-box\") ;\n  if(getComputedStyle(theButton).display === \"block\" && e.target.nodeName !==\"svg\" \n  && e.target.nodeName !== \"BUTTON\"\n  && e.target.nodeName !== \"TEXTAREA\" && e.target.nodeName !==\"path\" ){\n  theButton.style.display = \"none\" ;\n  dialogBox.style.display = \"none\" ;\n  document.getElementById('myTextArea').value = \"\"\n  window.getSelection().empty() ;\n}\n}\n\n  const handleClick = (e) => {\n    const text = window.getSelection().toString().trim();\n    dialogBox = document.querySelector(\".dialog-box\") ;\n    dialogBox.style.display = \"flex\" ;\n    const x = e.clientX ;\n    const y = e.clientY ;\n    dialogBox.style.left = `${x - 20}px` ;\n    dialogBox.style.top = `${y+25}px` ;\n\n    uid = new Date() ;\n    selectedText = text\n\n  }\n\n  const handleCancel = () => {\n    theButton.style.display = \"none\" ;\n    dialogBox.style.display = \"none\" ;\n    document.getElementById('myTextArea').value = \"\"\n    window.getSelection().empty() ;\n  \n  }\n\n const handleTextAreaClick = () => {\n    addedText = document.getElementById('myTextArea').value\n   \n    let obj = {\n      uid: uid ,\n      selectedText: selectedText ,\n      addedText: addedText\n    }\n    myArray.push(obj) ;\n    theButton.style.display = \"none\" ;\n    dialogBox.style.display = \"none\" ;\n    document.getElementById('myTextArea').value = \"\"\n    window.getSelection().empty() ;\n    console.log(myArray) ;\n  }\n\n\n  return (\n    <div className=\"App\" onMouseDown={deselectFunction}>\n      <h1>\n        Select the text anywhere below to check the functionality\n      </h1>\n     <div className=\"selectContentDiv\">\n      <p className=\"fontcheck w3-animate-zoom select-content \" onMouseUp={loggerFunction}> \n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n           dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris \n           nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in\n            voluptate velit esse cillum dolore eu fugiat nulla pariatur. \n            Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia \n            deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n            dolore.  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n            dolore magna aliqua.  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n           dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris \n           nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in\n            voluptate velit esse cillum dolore eu fugiat nulla pariatur. \n            Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia \n            deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n            dolore.  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n            dolore magna aliqua.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n           dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris \n           nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in\n            voluptate velit esse cillum dolore eu fugiat nulla pariatur. \n            Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia \n            deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n            dolore.  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n            dolore magna aliqua.  Lorem ipsum dolor sit amet.\n         </p>\n     </div>\n       \n          <AddCircleIcon  onClick={handleClick} />\n      \n      <Card className=\"dialog-box\" id=\"dialog-box\">\n      <textarea name=\"\" id=\"myTextArea\" cols=\"30\" rows=\"8\" placeholder=\"Enter text here\"></textarea> \n      <div className=\"textAreaButtons\" >\n      <button className=\"cancelButton\" onClick={handleCancel} >Cancel</button>\n      <button className=\"addButton\" onClick={handleTextAreaClick}>Add Text</button>\n      </div>\n      </Card>\n\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}